service: lambda-sensui

plugins:
  - serverless-offline
  - serverless-kms-secrets
  - serverless-domain-manager
  - serverless-plugin-aws-alerts

provider:
   name: aws
   runtime: nodejs8.10
   stage: develop
   region: us-west-2
   iamRoleStatements:
     - Effect: Allow
       Action:
         - KMS:Decrypt
       Resource: ${self:custom.kmsSecrets.keyArn} 
   environment:
      SECRETS: ${self:custom.kmsSecrets.secrets.SECRETS}
 
custom:
   serverless-kms-secrets:
    secretsFile: kms-secrets.${opt:stage, self:provider.stage}.${opt:region, self:provider.region}.yml
   kmsSecrets: ${file(kms-secrets.${opt:stage, self:provider.stage}.${opt:region, self:provider.region}.yml)}
   domainName: 
      develop: api.uport.space
      master: api.uport.me
   customDomain:
    domainName: ${self:custom.domainName.${opt:stage, self:provider.stage}}
    basePath: sensui
    createRoute53Record: false
   alerts:
    dashboards: true
    topics:
      alarm: arn:aws:sns:us-west-2:113196216558:cloudwatch-alarm-to-slack
    alarms:
      - functionThrottles
      - functionErrors
      - functionInvocations
      - functionDuration
    definitions: 
      functionDuration:
        threshold: 1000


functions:
  rpc:
    description: RPC handler
    handler: src/api_handler.rpc
    timeout: 30
    events:
     - http:
         path: rpc/{networkId}/{authToken}
         method: post
  new_block:
    description: New Block handler
    handler: src/api_handler.new_block
    timeout: 30
    events:
     - http:
         path: new_block/{networkId}
         method: get
  fund:
    description: Fund handler
    handler: src/api_handler.fund
    timeout: 30
    events:
     - http:
         path: fund/{networkId}/{authToken}
         method: post
  check_pendings:
    handler: src/jobs_handler.check_pendings
    events:
     - schedule:
         rate: rate(5 minutes)
         enabled: true
  
  